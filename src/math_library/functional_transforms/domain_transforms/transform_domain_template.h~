//-*-C++-*-

#ifndef DOMAIN_TRANSFORMATION_TEMPLATE_H
#define DOMAIN_TRANSFORMATION_TEMPLATE_H

namespace TRAFOR
{
  template<typename type_input,  DOMAIN_REPRESENTATION_type DMN_REP_LHS,
	   typename type_output, DOMAIN_REPRESENTATION_type DMN_REP_RHS,
	   int DMN_INDEX>
  struct TRANSFORM_DOMAIN
  {
    const static bool VERBOSE = true;
    
    template<typename scalartype_input, class domain_input, 
	     typename scalartype_output, class domain_output>
    static void execute(function<scalartype_input , domain_input >& f_input, 
			function<scalartype_output, domain_output>& f_output)
    {
      if(VERBOSE)
	cout << "\n\t template transform " << DMN_INDEX << "  " << type_input::get_name() << " --> " << type_output::get_name() << "\n\n";

    }
  };

}

#endif
