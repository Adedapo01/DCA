#! /usr/bin/env python3.1

print("\n******************************************************** \n")
print("This will generate the typelist definitions ")
print("\n******************************************************** \n")

#define TYPELIST_1(T1) Typelist<T1, NullType>
#define TYPELIST_2(T1, T2) Typelist<T1, TYPELIST_1(T2) >
#define TYPELIST_3(T1, T2, T3) Typelist<T1, TYPELIST_2(T2, T3) >
#define TYPELIST_4(T1, T2, T3, T4) Typelist<T1, TYPELIST_3(T2, T3, T4) >


N = 500   #int(raw_input("Maximum number of branches:"))

def print_definition(n):		
	file.write("#define TYPELIST_")		
	file.write(str(n))
	file.write("(")	

	for k in range(1, n):
	    file.write("T")		
	    file.write(str(k))	
	    file.write(", ")

	file.write("T")		
	file.write(str(n))	
	file.write(") Typelist<T1, ")

	if n == 1:
	   file.write("NullType")
	else:
	   file.write("TYPELIST_")
	   file.write(str(n-1))
	
	   file.write("(")   
	   for k in range(2, n):
               file.write("T")
	       file.write(str(k))	
	       file.write(", ")

	   file.write("T")
	   file.write(str(n))    
	   file.write(") ")
	
	file.write(">")
	file.write("\n")			
	return


file = open("type_list_definitions.h", 'w')

file.write("//-*-C++-*-\n\n")
file.write("/* \n * \t This is a C++ file generated by write_definitions.py \n *")
file.write("\n * \t author: Peter Staar  \n */ \n\n\n")

for k in range(1, N):
    print_definition(k)
