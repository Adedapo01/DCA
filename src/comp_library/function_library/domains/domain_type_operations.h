//-*-C++-*-

/*
 * 	 This is a C++ file generated by write_domain_type_operation.py
 *
 * 	 author: Peter Staar
 */

#include <include/dca/util/type_list.hpp>
#include "comp_library/function_library/domains/special_domains/dmn_variadic.h"

#ifndef DOMAIN_TYPE_OPERATIONS_H_
#define DOMAIN_TYPE_OPERATIONS_H_

namespace dca { namespace util {

    /****************************************
     ***           SWAP-COND               ***
     *****************************************/


    template <class dmn, class T1, class T2, int N>
    struct SWAP_COND {
        typedef dmn Result;
    };


    template <class T1,class T2>
    struct SWAP_COND<dmn_0<T1>, T1, T2, 0> {
        typedef dmn_0<T2> Result;
    };


    template <class T0, class T1,class T2>
    struct SWAP_COND<dmn_0<T0>, dmn_0<T1>, dmn_0<T2>, 0> {
        typedef dmn_0<T0> Result;
    };


    template <class T1,class T2>
    struct SWAP_COND<dmn_0<T1>, dmn_0<T1>, dmn_0<T2>, 0> {
        typedef dmn_0<T2> Result;
    };


    template <class D0,  class T1, class T2, int N>
    struct SWAP_COND<dmn_1< D0>,  T1, T2, N> {

        const static int LENGTH_0 = N;

        typedef dmn_1<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result   > Result;
    };

    template <class D0, class D1,  class T1, class T2, int N>
    struct SWAP_COND<dmn_2< D0, D1>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;

        typedef dmn_2<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result   > Result;
    };

    template <class D0, class D1, class D2,  class T1, class T2, int N>
    struct SWAP_COND<dmn_3< D0, D1, D2>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;

        typedef dmn_3<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3,  class T1, class T2, int N>
    struct SWAP_COND<dmn_4< D0, D1, D2, D3>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;

        typedef dmn_4<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4,  class T1, class T2, int N>
    struct SWAP_COND<dmn_5< D0, D1, D2, D3, D4>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;
        const static int LENGTH_4 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value;

        typedef dmn_5<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result,
            typename SWAP_COND<D4, T1, T2, LENGTH_4>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5,  class T1, class T2, int N>
    struct SWAP_COND<dmn_6< D0, D1, D2, D3, D4, D5>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;
        const static int LENGTH_4 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value;
        const static int LENGTH_5 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value;

        typedef dmn_6<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result,
            typename SWAP_COND<D4, T1, T2, LENGTH_4>::Result,
            typename SWAP_COND<D5, T1, T2, LENGTH_5>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6,  class T1, class T2, int N>
    struct SWAP_COND<dmn_7< D0, D1, D2, D3, D4, D5, D6>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;
        const static int LENGTH_4 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value;
        const static int LENGTH_5 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value;
        const static int LENGTH_6 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value;

        typedef dmn_7<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result,
            typename SWAP_COND<D4, T1, T2, LENGTH_4>::Result,
            typename SWAP_COND<D5, T1, T2, LENGTH_5>::Result,
            typename SWAP_COND<D6, T1, T2, LENGTH_6>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6, class D7,  class T1, class T2, int N>
    struct SWAP_COND<dmn_8< D0, D1, D2, D3, D4, D5, D6, D7>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;
        const static int LENGTH_4 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value;
        const static int LENGTH_5 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value;
        const static int LENGTH_6 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value;
        const static int LENGTH_7 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value + dca::util::NumberOf<typename D6::this_type, T1>::value;

        typedef dmn_8<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result,
            typename SWAP_COND<D4, T1, T2, LENGTH_4>::Result,
            typename SWAP_COND<D5, T1, T2, LENGTH_5>::Result,
            typename SWAP_COND<D6, T1, T2, LENGTH_6>::Result,
            typename SWAP_COND<D7, T1, T2, LENGTH_7>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6, class D7, class D8,  class T1, class T2, int N>
    struct SWAP_COND<dmn_9< D0, D1, D2, D3, D4, D5, D6, D7, D8>,  T1, T2, N> {

        const static int LENGTH_0 = N;
        const static int LENGTH_1 = N + dca::util::NumberOf<typename D0::this_type, T1>::value;
        const static int LENGTH_2 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value;
        const static int LENGTH_3 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value;
        const static int LENGTH_4 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value;
        const static int LENGTH_5 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value;
        const static int LENGTH_6 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value;
        const static int LENGTH_7 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value + dca::util::NumberOf<typename D6::this_type, T1>::value;
        const static int LENGTH_8 = N + dca::util::NumberOf<typename D0::this_type, T1>::value + dca::util::NumberOf<typename D1::this_type, T1>::value + dca::util::NumberOf<typename D2::this_type, T1>::value + dca::util::NumberOf<typename D3::this_type, T1>::value + dca::util::NumberOf<typename D4::this_type, T1>::value + dca::util::NumberOf<typename D5::this_type, T1>::value + dca::util::NumberOf<typename D6::this_type, T1>::value + dca::util::NumberOf<typename D7::this_type, T1>::value;

        typedef dmn_9<
            typename SWAP_COND<D0, T1, T2, LENGTH_0>::Result,
            typename SWAP_COND<D1, T1, T2, LENGTH_1>::Result,
            typename SWAP_COND<D2, T1, T2, LENGTH_2>::Result,
            typename SWAP_COND<D3, T1, T2, LENGTH_3>::Result,
            typename SWAP_COND<D4, T1, T2, LENGTH_4>::Result,
            typename SWAP_COND<D5, T1, T2, LENGTH_5>::Result,
            typename SWAP_COND<D6, T1, T2, LENGTH_6>::Result,
            typename SWAP_COND<D7, T1, T2, LENGTH_7>::Result,
            typename SWAP_COND<D8, T1, T2, LENGTH_8>::Result   > Result;
    };


    /****************************************
     ***           SWAP-FIRST              ***
     *****************************************/


    template <class dmn, class T1,class T2>
    struct SWAP_FIRST
    {
        typedef typename SWAP_COND<dmn, T1, T2, 0>::Result Result;
    };




    /****************************************
     ***           SWAP-ALL                ***
     *****************************************/


    template <class T0, class T1,class T2>
    struct SWAP_ALL
    {};


    template <class T0, class T1,class T2>
    struct SWAP_ALL<dmn_0<T0>, T1, T2> {
        typedef dmn_0<T0> Result;
    };


    template <class T1,class T2>
    struct SWAP_ALL<dmn_0<T1>, T1, T2> {
        typedef dmn_0<T2> Result;
    };


    template <class T0, class T1,class T2>
    struct SWAP_ALL<dmn_0<T0>, dmn_0<T1>, dmn_0<T2> > {
        typedef dmn_0<T0> Result;
    };


    template <class T1,class T2>
    struct SWAP_ALL<dmn_0<T1>, dmn_0<T1>, dmn_0<T2> > {
        typedef dmn_0<T2> Result;
    };


    template <class D0,  class T1, class T2>
    struct SWAP_ALL<dmn_1< D0>, T1, T2> {
        typedef dmn_1<typename SWAP_ALL<D0,T1,T2>::Result   > Result;
    };

    template <class D0, class D1,  class T1, class T2>
    struct SWAP_ALL<dmn_2< D0, D1>, T1, T2> {
        typedef dmn_2<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2,  class T1, class T2>
    struct SWAP_ALL<dmn_3< D0, D1, D2>, T1, T2> {
        typedef dmn_3<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3,  class T1, class T2>
    struct SWAP_ALL<dmn_4< D0, D1, D2, D3>, T1, T2> {
        typedef dmn_4<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4,  class T1, class T2>
    struct SWAP_ALL<dmn_5< D0, D1, D2, D3, D4>, T1, T2> {
        typedef dmn_5<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result,
            typename SWAP_ALL<D4,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5,  class T1, class T2>
    struct SWAP_ALL<dmn_6< D0, D1, D2, D3, D4, D5>, T1, T2> {
        typedef dmn_6<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result,
            typename SWAP_ALL<D4,T1,T2>::Result,
            typename SWAP_ALL<D5,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6,  class T1, class T2>
    struct SWAP_ALL<dmn_7< D0, D1, D2, D3, D4, D5, D6>, T1, T2> {
        typedef dmn_7<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result,
            typename SWAP_ALL<D4,T1,T2>::Result,
            typename SWAP_ALL<D5,T1,T2>::Result,
            typename SWAP_ALL<D6,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6, class D7,  class T1, class T2>
    struct SWAP_ALL<dmn_8< D0, D1, D2, D3, D4, D5, D6, D7>, T1, T2> {
        typedef dmn_8<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result,
            typename SWAP_ALL<D4,T1,T2>::Result,
            typename SWAP_ALL<D5,T1,T2>::Result,
            typename SWAP_ALL<D6,T1,T2>::Result,
            typename SWAP_ALL<D7,T1,T2>::Result   > Result;
    };

    template <class D0, class D1, class D2, class D3, class D4, class D5, class D6, class D7, class D8,  class T1, class T2>
    struct SWAP_ALL<dmn_9< D0, D1, D2, D3, D4, D5, D6, D7, D8>, T1, T2> {
        typedef dmn_9<typename SWAP_ALL<D0,T1,T2>::Result,
            typename SWAP_ALL<D1,T1,T2>::Result,
            typename SWAP_ALL<D2,T1,T2>::Result,
            typename SWAP_ALL<D3,T1,T2>::Result,
            typename SWAP_ALL<D4,T1,T2>::Result,
            typename SWAP_ALL<D5,T1,T2>::Result,
            typename SWAP_ALL<D6,T1,T2>::Result,
            typename SWAP_ALL<D7,T1,T2>::Result,
            typename SWAP_ALL<D8,T1,T2>::Result   > Result;
    };
} // namespace util
} //namespace dca

#endif
