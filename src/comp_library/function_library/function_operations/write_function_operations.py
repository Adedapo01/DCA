#! /usr/bin/env python3.1

import commands
import shutil
import os
import sys
import time

N = 20

def print_subind_2_linind_header(file,n):

    file.write("int subind_2_linind(")

    string_i = " int iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")

    file.write(");\n")

def print_subind_2_linind(file,n):

    file.write("int subind_2_linind(")

    string_i = " int iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")

    file.write(")\n{\n")

    file.write("return dmn(")

    string_i = " iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")


    file.write(");\n}\n\n")

def print_function_operator_header(file,n):

    file.write("scalartype& operator()(")

    string_i = " int iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")

    file.write(");\n")

def print_function_operators(file,n):

    file.write("inline scalartype&  operator()(")

    string_i = " int iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")

    file.write(")\n{\n")

    file.write("return fnc_values[ dmn(")

    string_i = " iINDEX"
    for t in range(0,n):
        file.write(string_i.replace("INDEX", str(t)))
        if(t == n-1): 
            file.write("")
        else:
            file.write(", ")


    file.write(")];\n}\n\n")

################################################
###                                          ###
###        subind_2_linind_collection.h      ###
###                                          ###
################################################

file_name = "subind_2_linind_collection.h"

file = open(file_name, 'w')

file.write("//-*-C++-*-\n\n")
file.write("/*! \n")
file.write(" * \t \\class  subind_2_linind_collection.h \n ") 
file.write(" * \t \\brief  This is a C++ file generated by write_function_operations.py. It implements the conversion from coordinates to linear index. \n")
file.write(" * \t \\author Peter Staar  \n */")
file.write(" \n\n\n")

file.write("template<typename scalartype>\nstruct subind_2_linind_collection{\n public: \n\n")

for l in range(2,N):
    print_subind_2_linind_header(file,l)

file.write("\n};\n")

file.close()

#####################################
###                               ###
###        subind_2_linind.h      ###
###                               ###
#####################################

file_name = "subind_2_linind.h"

file = open(file_name, 'w')

file.write("//-*-C++-*-\n\n")
file.write("/*! \n")
file.write(" * \t \\class  subind_2_linind \n ") 
file.write(" * \t \\brief  This is a C++ file generated by write_function_operations.py. It implements the operator(...) methods \n")
file.write(" * \t \\author Peter Staar  \n */")
file.write(" \n\n\n")

for l in range(2,N):
    print_subind_2_linind(file,l)

file.close()


###############################################
###                                         ###
###       function_operators_collection.h    ###
###                                         ###
###############################################

file_name = "function_operators_collection.h"

file = open(file_name, 'w')

file.write("//-*-C++-*-\n\n")
file.write("/*! \n")
file.write(" * \t \\class function_operator_collection \n") 
file.write(" * \t \\brief This is a C++ file generated by write_function_operations.py. It lists all the function-operator(...) methods \n")
file.write(" * \t \\author Peter Staar  \n */")
file.write(" \n\n\n")

file.write("template<typename scalartype>\nstruct function_operators_collection{\n public: \n\n")

for l in range(2,N):
    print_function_operator_header(file,l)

file.write("\n};\n")

file.close()

#####################################
###                               ###
###       function_operators.h    ###
###                               ###
#####################################

file_name = "function_operators.h"

file = open(file_name, 'w')

file.write("//-*-C++-*-\n\n")
file.write("/*! \n")
file.write(" * \t \class function \n ") 
file.write(" * \t \brief This is a C++ file generated by write_function_operations.py. It implements the operator(...) methods \n")
file.write(" * \t author: Peter Staar  \n */")
file.write(" \n\n\n")

for l in range(2,N):
    print_function_operators(file,l)

file.close()
