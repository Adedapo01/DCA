#!/bin/bash
#
# Batch script to run DCA++'s test suite on ORNL's Summit supercomputer.
# The script has to be submitted from the directory where the script is located (DCA/test) or the
# top-level source directory (DCA).
#
# Usage: bsub summit_run_tests.lsf      [from a subdirectory of the DCA source]
# Note:  Define the variable DCA_BUILD_TYPE to select a build type (default: Release).
#
# TODO: Fix project ID and walltime.

#BSUB -J DCA++_test_suite
#BSUB -P CPH102
#BSUB -nnodes 1
#BSUB -W 30
#BSUB -alloc_flags gpumps
#BSUB -o out.DCA++-tests.%J.txt
#BSUB -e err.DCA++-tests.%J.txt

# Check where the script has been submitted from and change to the top-level source dir.
cd ${LS_SUBCWD}
source_dir=$(git rev-parse --show-toplevel)

if [[ ${source_dir} == "" ]]; then
    1>&2 printf "Usage: bsub summit_run_tests.lsf [from a subdirectory of the DCA source]"
    exit
fi

cd ${source_dir}

# Load all required modules.
source $MODULESHOME/init/bash
source build-aux/summit_load_modules.sh

# Create a clean build directory and change to it.
BUILD_DIR="build_$LSB_JOBID"
mkdir $BUILD_DIR && cd $BUILD_DIR

# Run CMake to configure the build (Default: Debug).
type=${DCA_BUILD_TYPE:-Debug}
echo "DCA build type: ${type}"
cmake -C ../build-aux/summit.cmake -DCMAKE_BUILD_TYPE=$type -DDCA_WITH_TESTS_FAST=ON -DDCA_WITH_TESTS_EXTENSIVE=ON ../

# Build the tests.
make -j

# Run the tests.
date
ctest --output-on-failure
date
