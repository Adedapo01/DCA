// File: include_files.h.in
//
// The value of QMC_INTEGRATOR_BIT is set by the cmake configuration.
// NFFT <--> DFT
const bool DO_NFFT = true;

// parallelization
#include "comp_library/parallelization_library/include_parallelization_library.h"

//DCA data
#include "phys_library/DCA+_data/DCA_data.h"

//parameters
#include "phys_library/parameters/Parameters.h"

//DCA calculation
#include "phys_library/DCA+_loop/DCA+_loop.h"

// random number generator
#include "dca/math_library/random_number_library/random_number_library.hpp"

#include "comp_library/IO_library/JSON/JSON_writer.h"

#ifdef USE_PTHREADS
#include "phys_library/DCA+_step/cluster_solver/cluster_solver_mc_pthread_jacket/include_posix_qmci_integration.h"
#endif
#if   defined(USE_CTAUX)
#include "phys_library/DCA+_step/cluster_solver/cluster_solver_mc_ctaux/ctaux_cluster_solver.h"
#elif defined(USE_SS_CT_HYB)
#include "phys_library/DCA+_step/cluster_solver/cluster_solver_ss_hybridization/ss_hybridization_solver.h"
#elif defined(USE_HTS)
#include "phys_library/DCA+_step/cluster_solver/cluster_solver_series_expansion/high_temperature_series_expansion_solver.h"
#else
#error "define a MC_solver"
#endif

